<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." Output="None"%>
<%@ Register Name="Model" Template="Model.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Model_Extend" Template="Model_Extend.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="DAL" Template="DAL.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="DAL_Extend" Template="DAL_Extend.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="DAL_Basic" Template="DAL_Basic.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="BLL" Template="BLL.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" Category="Context" Description="Database containing the tables." %>

<script runat="template">
		[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))] 
		[Description("输出目录.")]
		public string OutputDirectory  = "D:/Project/DapperCodeSmith/weapp/";
</script>
<%
        
    Response.Write("生成目录 " + this.OutputDirectory);
    Response.Write("\r\n");
   

    foreach(var table in SourceDatabase.Tables)
    {
          Model model = new Model();
          model.Table = table;
//        model.NameSpace = this.NameSpaceModel;
          model.RenderToFile(this.OutputDirectory + "Model/" + model.GetFileName(), true);
    	
//        Model_Extend model_extend = new Model_Extend();
//        model_extend.Table = table;
//        model_extend.NameSpace = this.NameSpaceModel;
//        model_extend.RenderToFile(this.OutputDirectory + "Model/" + model_extend.GetFileName(), true);
        

//        DAL dal = new DAL();
//        dal.Table = table;
//        dal.NameSpace = this.NameSpaceDAL;
//        dal.NameSpaceModel = this.NameSpaceModel;
//        dal.SqlDapperHelper = SqlDapperHelper;
//        dal.SqlHelper = SqlHelper;
//        dal.RenderToFile(this.OutputDirectory + "DAL/" + dal.GetFileName(), true);
        
          DAL_Basic dal = new DAL_Basic();
          dal.Table = table;
//        dal.NameSpace = this.NameSpaceDAL;
//        dal.NameSpaceModel = this.NameSpaceModel;
//        dal.SqlDapperHelper = SqlDapperHelper;
//        dal.SqlHelper = SqlHelper;
          dal.RenderToFile(this.OutputDirectory + "DAL/" + dal.GetFileName(), true);
        
//        DAL_Extend dal_extend = new DAL_Extend();
//        dal_extend.Table = table;
        //dal_extend.NameSpace = this.NameSpaceDAL;
        //dal_extend.NameSpaceModel = this.NameSpaceModel;
//        dal_extend.RenderToFile(this.OutputDirectory + "DAL_ex/" + dal_extend.GetFileName(), true);
        
//        BLL bll = this.Create<BLL>();
//        bll.ModelsNamespace = model.ModelsNamespace;
//        bll.DALClassNameSurfix = dal.DALClassNameSurfix;
//        bll.DALNamespace = dal.DALNamespace;
//        bll.BLLClassNameSurfix = "BLL";
//        bll.BLLNamespace = this.RootNamespace+".BLL";
//        bll.TargetTable = this.SourceTable;
//        bll.RenderToFile(this.OutputDirectory+"BLL/"+bll.GetFileName(),true);

        Response.Write("生成成功 " + table.Name);
        Response.Write("\r\n");
    }
%>